# I guess I can't use those in my work either, if I want to calculate delta incomes!
# So they have to go as well.
#
CENSUS2006DATA <- subset(CENSUS2006DATA, AVGAFTERTAXINC>0)
head((CENSUS2006DATA <- CENSUS2006DATA %>%
select(DAUID, POP2006, POP0TO14ADD, PERCLOWINC0TO5, AVGAFTERTAXINC)))
# note I had already calculated pop0to14 outside of R in libreoffice before I started this work
CE06 <- CENSUS2006DATA %>%
rename(
POP0TO142006 = POP0TO14ADD,
PERCLOWINC0TO52006 = PERCLOWINC0TO5,
AVGAFTERTAXINCHH2006 = AVGAFTERTAXINC
)
CE16 <- CENSUS2016DATA %>%
rename(
POP0TO142016 = POP0TO14,
PERCLOWINC0TO52016 = PERCLOWINC0TO5,
AVGAFTERTAXINCHH2016 = AVGAFTERTAXINCOME
)
(in2006not2016 <- anti_join(CE06,CE16))
# the default for "merge" will do a join while dropping 2006 DAs found in in2006not2016
# so we have to keep those by saying all.x = "TRUE"
# it also has no problem bringing "NA" data from 2016
# so we will have to drop those later on
#
finaldf <- merge(CE06, CE16, by = "DAUID", all.x = "TRUE")
# now we add in all the split-DA data by hand
# ONE AT A TIME
#
# DAUID==35250063
#
finaldf$POP2016[finaldf$DAUID==35250063] <- (CE16$POP2016[CE16$DAUID==35250999] + CE16$POP2016[CE16$DAUID==35250998])
#
finaldf$POP0TO142016[finaldf$DAUID==35250063] <- (CE16$POP0TO142016[CE16$DAUID==35250999] + CE16$POP0TO142016[CE16$DAUID==35250998])
#
# this is a bit kludged, I should have downloaded number of households to average this
# by household instead of by population.
# could fix it later
# (though these are all new neighbourhoods, so we can assume in approximation that all the
# households are homogeneous in size)
#
finaldf$AVGAFTERTAXINCHH2016[finaldf$DAUID==35250063] <-     round(((CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35250999] * CE16$POP2016[CE16$DAUID==35250999] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35250998] * CE16$POP2016[CE16$DAUID==35250998]) / finaldf$POP2016[finaldf$DAUID==35250063]), 0
)
#
# and for perclowinc0to5, this really does just take population proportions to solve
#
finaldf$PERCLOWINC0TO52016[finaldf$DAUID==35250063] <-     round(((CE16$PERCLOWINC0TO5[CE16$DAUID==35250999] * CE16$POP2016[CE16$DAUID==35250999] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35250998] * CE16$POP2016[CE16$DAUID==35250998]) / finaldf$POP2016[finaldf$DAUID==35250063]), 0
)
#
# now we just have to do this for the other 22 split DAs
#
# then we delete all the data that is NA for 2016
#
# so let's do all the rest here.
#
# DA = 35250132
#
finaldf$POP2016[finaldf$DAUID==35250132] <- (CE16$POP2016[CE16$DAUID==35250981] + CE16$POP2016[CE16$DAUID==35250982])
#
finaldf$POP0TO142016[finaldf$DAUID==35250132] <- (CE16$POP0TO142016[CE16$DAUID==35250981] + CE16$POP0TO142016[CE16$DAUID==35250982])
#
finaldf$AVGAFTERTAXINCHH2016[finaldf$DAUID==35250132] <-     round(((CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35250981] * CE16$POP2016[CE16$DAUID==35250981] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35250982] * CE16$POP2016[CE16$DAUID==35250982]) / finaldf$POP2016[finaldf$DAUID==35250132]), 0
)
#
finaldf$PERCLOWINC0TO52016[finaldf$DAUID==35250132] <-     round(((CE16$PERCLOWINC0TO5[CE16$DAUID==35250981] * CE16$POP2016[CE16$DAUID==35250981] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35250982] * CE16$POP2016[CE16$DAUID==35250982]) / finaldf$POP2016[finaldf$DAUID==35250132]), 0
)
#
# DA = 35250154
#
finaldf$POP2016[finaldf$DAUID==35250154] <- (CE16$POP2016[CE16$DAUID==35251003] + CE16$POP2016[CE16$DAUID==35251004] + CE16$POP2016[CE16$DAUID==35251005] + CE16$POP2016[CE16$DAUID==35251006])
#
finaldf$POP0TO142016[finaldf$DAUID==35250154] <- (CE16$POP0TO142016[CE16$DAUID==35251003] + CE16$POP0TO142016[CE16$DAUID==35251004] + CE16$POP0TO142016[CE16$DAUID==35251005] + CE16$POP0TO142016[CE16$DAUID==35251006])
#
finaldf$AVGAFTERTAXINCHH2016[finaldf$DAUID==35250154] <-     round(((CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251003] * CE16$POP2016[CE16$DAUID==35251003] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251004] * CE16$POP2016[CE16$DAUID==35251004] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251005] * CE16$POP2016[CE16$DAUID==35251005] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251006] * CE16$POP2016[CE16$DAUID==35251006]) / finaldf$POP2016[finaldf$DAUID==35250154]), 0
)
#
finaldf$PERCLOWINC0TO52016[finaldf$DAUID==35250154] <-     round(((CE16$PERCLOWINC0TO5[CE16$DAUID==35251003] * CE16$POP2016[CE16$DAUID==35251003] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251004] * CE16$POP2016[CE16$DAUID==35251004] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251005] * CE16$POP2016[CE16$DAUID==35251005] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251006] * CE16$POP2016[CE16$DAUID==35251006]) / finaldf$POP2016[finaldf$DAUID==35250154]), 0
)
#
# DA = 35250155
#
finaldf$POP2016[finaldf$DAUID==35250155] <- (CE16$POP2016[CE16$DAUID==35251007] + CE16$POP2016[CE16$DAUID==35251008] + CE16$POP2016[CE16$DAUID==35251009] + CE16$POP2016[CE16$DAUID==35251010])
#
finaldf$POP0TO142016[finaldf$DAUID==35250155] <- (CE16$POP0TO142016[CE16$DAUID==35251007] + CE16$POP0TO142016[CE16$DAUID==35251008] + CE16$POP0TO142016[CE16$DAUID==35251009] + CE16$POP0TO142016[CE16$DAUID==35251010])
#
finaldf$AVGAFTERTAXINCHH2016[finaldf$DAUID==35250155] <-     round(((CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251007] * CE16$POP2016[CE16$DAUID==35251007] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251008] * CE16$POP2016[CE16$DAUID==35251008] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251009] * CE16$POP2016[CE16$DAUID==35251009] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251010] * CE16$POP2016[CE16$DAUID==35251010]) / finaldf$POP2016[finaldf$DAUID==35250155]), 0
)
#
finaldf$PERCLOWINC0TO52016[finaldf$DAUID==35250155] <-     round(((CE16$PERCLOWINC0TO5[CE16$DAUID==35251007] * CE16$POP2016[CE16$DAUID==35251007] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251008] * CE16$POP2016[CE16$DAUID==35251008] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251009] * CE16$POP2016[CE16$DAUID==35251009] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251010] * CE16$POP2016[CE16$DAUID==35251010]) / finaldf$POP2016[finaldf$DAUID==35250155]), 0
)
#
# DA = 35250171
#
finaldf$POP2016[finaldf$DAUID==35250171] <- (CE16$POP2016[CE16$DAUID==35251027] + CE16$POP2016[CE16$DAUID==35251028])
#
finaldf$POP0TO142016[finaldf$DAUID==35250171] <- (CE16$POP0TO142016[CE16$DAUID==35251027] + CE16$POP0TO142016[CE16$DAUID==35251028])
#
finaldf$AVGAFTERTAXINCHH2016[finaldf$DAUID==35250171] <-     round(((CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251027] * CE16$POP2016[CE16$DAUID==35251027] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251028] * CE16$POP2016[CE16$DAUID==35251028]) / finaldf$POP2016[finaldf$DAUID==35250171]), 0
)
#
finaldf$PERCLOWINC0TO52016[finaldf$DAUID==35250171] <-     round(((CE16$PERCLOWINC0TO5[CE16$DAUID==35251027] * CE16$POP2016[CE16$DAUID==35251027] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251028] * CE16$POP2016[CE16$DAUID==35251028]) / finaldf$POP2016[finaldf$DAUID==35250171]), 0
)
#
# DA = 35250174
#
finaldf$POP2016[finaldf$DAUID==35250174] <- (CE16$POP2016[CE16$DAUID==35251029] + CE16$POP2016[CE16$DAUID==35251030])
#
finaldf$POP0TO142016[finaldf$DAUID==35250174] <- (CE16$POP0TO142016[CE16$DAUID==35251029] + CE16$POP0TO142016[CE16$DAUID==35251030])
#
finaldf$AVGAFTERTAXINCHH2016[finaldf$DAUID==35250174] <-     round(((CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251029] * CE16$POP2016[CE16$DAUID==35251029] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251030] * CE16$POP2016[CE16$DAUID==35251030]) / finaldf$POP2016[finaldf$DAUID==35250174]), 0
)
#
finaldf$PERCLOWINC0TO52016[finaldf$DAUID==35250174] <-     round(((CE16$PERCLOWINC0TO5[CE16$DAUID==35251029] * CE16$POP2016[CE16$DAUID==35251029] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251030] * CE16$POP2016[CE16$DAUID==35251030]) / finaldf$POP2016[finaldf$DAUID==35250174]), 0
)
#
# DA = 35250182
# This was a simple rename to 25350982, except probably the edges changed.
# I'm ingoring minor changes to DA boundaries, because that won't hurt me any more than
# ignoring the ecological fallacy.
#
finaldf$POP2016[finaldf$DAUID==35250182] <- (CE16$POP2016[CE16$DAUID==35250982])
#
finaldf$POP0TO142016[finaldf$DAUID==35250182] <- (CE16$POP0TO142016[CE16$DAUID==35250982])
#
finaldf$AVGAFTERTAXINCHH2016[finaldf$DAUID==35250182] <-     (CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35250982])
#
finaldf$PERCLOWINC0TO52016[finaldf$DAUID==35250182] <- (CE16$PERCLOWINC0TO5[CE16$DAUID==35250982])
#
# DA = 35250187
#
finaldf$POP2016[finaldf$DAUID==35250187] <- (CE16$POP2016[CE16$DAUID==35250985])
#
finaldf$POP0TO142016[finaldf$DAUID==35250187] <- (CE16$POP0TO142016[CE16$DAUID==35250985])
#
finaldf$AVGAFTERTAXINCHH2016[finaldf$DAUID==35250187] <-     (CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35250985])
#
finaldf$PERCLOWINC0TO52016[finaldf$DAUID==35250187] <- (CE16$PERCLOWINC0TO5[CE16$DAUID==35250985])
#
# DA = 35250577
#
finaldf$POP2016[finaldf$DAUID==35250577] <- (CE16$POP2016[CE16$DAUID==35251011] + CE16$POP2016[CE16$DAUID==35251012] + CE16$POP2016[CE16$DAUID==35251013] + CE16$POP2016[CE16$DAUID==35251014] + CE16$POP2016[CE16$DAUID==35251015])
#
finaldf$POP0TO142016[finaldf$DAUID==35250577] <- (CE16$POP0TO142016[CE16$DAUID==35251011] + CE16$POP0TO142016[CE16$DAUID==35251012] + CE16$POP0TO142016[CE16$DAUID==35251013] + CE16$POP0TO142016[CE16$DAUID==35251014] + CE16$POP2016[CE16$DAUID==35251015])
#
finaldf$AVGAFTERTAXINCHH2016[finaldf$DAUID==35250577] <-     round(((CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251011] * CE16$POP2016[CE16$DAUID==35251011] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251012] * CE16$POP2016[CE16$DAUID==35251012] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251013] * CE16$POP2016[CE16$DAUID==35251013] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251014] * CE16$POP2016[CE16$DAUID==35251014] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251015] * CE16$POP2016[CE16$DAUID==35251015]) / finaldf$POP2016[finaldf$DAUID==35250577]), 0
)
#
finaldf$PERCLOWINC0TO52016[finaldf$DAUID==35250577] <-     round(((CE16$PERCLOWINC0TO5[CE16$DAUID==35251011] * CE16$POP2016[CE16$DAUID==35251011] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251012] * CE16$POP2016[CE16$DAUID==35251012] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251013] * CE16$POP2016[CE16$DAUID==35251013] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251014] * CE16$POP2016[CE16$DAUID==35251014] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251015] * CE16$POP2016[CE16$DAUID==35251015]) / finaldf$POP2016[finaldf$DAUID==35250577]), 0
)
#
# DA = 35250584
#
finaldf$POP2016[finaldf$DAUID==35250584] <- (CE16$POP2016[CE16$DAUID==35250998] + CE16$POP2016[CE16$DAUID==35250999])
#
finaldf$POP0TO142016[finaldf$DAUID==35250584] <- (CE16$POP0TO142016[CE16$DAUID==35250998] + CE16$POP0TO142016[CE16$DAUID==35250999])
#
finaldf$AVGAFTERTAXINCHH2016[finaldf$DAUID==35250584] <-     round(((CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35250998] * CE16$POP2016[CE16$DAUID==35250998] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35250999] * CE16$POP2016[CE16$DAUID==35250999]) / finaldf$POP2016[finaldf$DAUID==35250584]), 0
)
#
finaldf$PERCLOWINC0TO52016[finaldf$DAUID==35250584] <-     round(((CE16$PERCLOWINC0TO5[CE16$DAUID==35250998] * CE16$POP2016[CE16$DAUID==35250998] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35250999] * CE16$POP2016[CE16$DAUID==35250999]) / finaldf$POP2016[finaldf$DAUID==35250584]), 0
)
#
# DA = 35250653
#
finaldf$POP2016[finaldf$DAUID==35250653] <- (CE16$POP2016[CE16$DAUID==35251016] + CE16$POP2016[CE16$DAUID==35251017] + CE16$POP2016[CE16$DAUID==35251018])
#
finaldf$POP0TO142016[finaldf$DAUID==35250653] <- (CE16$POP0TO142016[CE16$DAUID==35251016] + CE16$POP0TO142016[CE16$DAUID==35251017] + CE16$POP0TO142016[CE16$DAUID==35251018])
#
finaldf$AVGAFTERTAXINCHH2016[finaldf$DAUID==35250653] <-     round(((CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251016] * CE16$POP2016[CE16$DAUID==35251016] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251017] * CE16$POP2016[CE16$DAUID==35251017] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251018] * CE16$POP2016[CE16$DAUID==35251018]) / finaldf$POP2016[finaldf$DAUID==35250653]), 0
)
#
finaldf$PERCLOWINC0TO52016[finaldf$DAUID==35250653] <-     round(((CE16$PERCLOWINC0TO5[CE16$DAUID==35251016] * CE16$POP2016[CE16$DAUID==35251016] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251017] * CE16$POP2016[CE16$DAUID==35251017] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251018] * CE16$POP2016[CE16$DAUID==35251018]) / finaldf$POP2016[finaldf$DAUID==35250653]), 0
)
#
# DA = 35250808
#
finaldf$POP2016[finaldf$DAUID==35250808] <- (CE16$POP2016[CE16$DAUID==35251019] + CE16$POP2016[CE16$DAUID==35251020] + CE16$POP2016[CE16$DAUID==35251021])
#
finaldf$POP0TO142016[finaldf$DAUID==35250808] <- (CE16$POP0TO142016[CE16$DAUID==35251019] + CE16$POP0TO142016[CE16$DAUID==35251020] + CE16$POP0TO142016[CE16$DAUID==35251021])
#
finaldf$AVGAFTERTAXINCHH2016[finaldf$DAUID==35250808] <-     round(((CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251019] * CE16$POP2016[CE16$DAUID==35251019] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251020] * CE16$POP2016[CE16$DAUID==35251020] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251021] * CE16$POP2016[CE16$DAUID==35251021]) / finaldf$POP2016[finaldf$DAUID==35250808]), 0
)
#
finaldf$PERCLOWINC0TO52016[finaldf$DAUID==35250808] <-     round(((CE16$PERCLOWINC0TO5[CE16$DAUID==35251019] * CE16$POP2016[CE16$DAUID==35251019] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251020] * CE16$POP2016[CE16$DAUID==35251020] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251021] * CE16$POP2016[CE16$DAUID==35251021]) / finaldf$POP2016[finaldf$DAUID==35250808]), 0
)
#
# DA = 35250809
#
finaldf$POP2016[finaldf$DAUID==35250809] <- (CE16$POP2016[CE16$DAUID==35251022] + CE16$POP2016[CE16$DAUID==35251023] + CE16$POP2016[CE16$DAUID==35251024])
#
finaldf$POP0TO142016[finaldf$DAUID==35250809] <- (CE16$POP0TO142016[CE16$DAUID==35251022] + CE16$POP0TO142016[CE16$DAUID==35251023] + CE16$POP0TO142016[CE16$DAUID==35251024])
#
finaldf$AVGAFTERTAXINCHH2016[finaldf$DAUID==35250809] <-     round(((CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251022] * CE16$POP2016[CE16$DAUID==35251022] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251023] * CE16$POP2016[CE16$DAUID==35251023] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251024] * CE16$POP2016[CE16$DAUID==35251024]) / finaldf$POP2016[finaldf$DAUID==35250809]), 0
)
#
finaldf$PERCLOWINC0TO52016[finaldf$DAUID==35250809] <-     round(((CE16$PERCLOWINC0TO5[CE16$DAUID==35251022] * CE16$POP2016[CE16$DAUID==35251022] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251023] * CE16$POP2016[CE16$DAUID==35251023] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251024] * CE16$POP2016[CE16$DAUID==35251024]) / finaldf$POP2016[finaldf$DAUID==35250809]), 0
)
#
# DA = 35250840
#
finaldf$POP2016[finaldf$DAUID==35250840] <- (CE16$POP2016[CE16$DAUID==35251025] + CE16$POP2016[CE16$DAUID==35251026])
#
finaldf$POP0TO142016[finaldf$DAUID==35250840] <- (CE16$POP0TO142016[CE16$DAUID==35251025] + CE16$POP0TO142016[CE16$DAUID==35251026])
#
finaldf$AVGAFTERTAXINCHH2016[finaldf$DAUID==35250840] <-     round(((CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251025] * CE16$POP2016[CE16$DAUID==35251025] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251026] * CE16$POP2016[CE16$DAUID==35251026]) / finaldf$POP2016[finaldf$DAUID==35250840]), 0
)
#
finaldf$PERCLOWINC0TO52016[finaldf$DAUID==35250840] <-     round(((CE16$PERCLOWINC0TO5[CE16$DAUID==35251025] * CE16$POP2016[CE16$DAUID==35251025] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251026] * CE16$POP2016[CE16$DAUID==35251026]) / finaldf$POP2016[finaldf$DAUID==35250840]), 0
)
#
# DA = 35850841
#
finaldf$POP2016[finaldf$DAUID==35250841] <- (CE16$POP2016[CE16$DAUID==35250990] + CE16$POP2016[CE16$DAUID==35250991] + CE16$POP2016[CE16$DAUID==35250992])
#
finaldf$POP0TO142016[finaldf$DAUID==35250841] <- (CE16$POP0TO142016[CE16$DAUID==35250990] + CE16$POP0TO142016[CE16$DAUID==35250991] + CE16$POP0TO142016[CE16$DAUID==35250992])
#
finaldf$AVGAFTERTAXINCHH2016[finaldf$DAUID==35250841] <-     round(((CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35250990] * CE16$POP2016[CE16$DAUID==35250990] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35250991] * CE16$POP2016[CE16$DAUID==35250991] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35250992] * CE16$POP2016[CE16$DAUID==35250992]) / finaldf$POP2016[finaldf$DAUID==35250841]), 0
)
#
finaldf$PERCLOWINC0TO52016[finaldf$DAUID==35250841] <-     round(((CE16$PERCLOWINC0TO5[CE16$DAUID==35250990] * CE16$POP2016[CE16$DAUID==35250990] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35250991] * CE16$POP2016[CE16$DAUID==35250991] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35250992] * CE16$POP2016[CE16$DAUID==35250992]) / finaldf$POP2016[finaldf$DAUID==35250841]), 0
)
#
# DA = 35250842
#
finaldf$POP2016[finaldf$DAUID==35250842] <- (CE16$POP2016[CE16$DAUID==35250986] + CE16$POP2016[CE16$DAUID==35250987])
#
finaldf$POP0TO142016[finaldf$DAUID==35250842] <- (CE16$POP0TO142016[CE16$DAUID==35250986] + CE16$POP0TO142016[CE16$DAUID==35250987])
#
finaldf$AVGAFTERTAXINCHH2016[finaldf$DAUID==35250842] <-     round(((CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35250986] * CE16$POP2016[CE16$DAUID==35250986] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35250987] * CE16$POP2016[CE16$DAUID==35250987]) / finaldf$POP2016[finaldf$DAUID==35250842]), 0
)
#
finaldf$PERCLOWINC0TO52016[finaldf$DAUID==35250842] <-     round(((CE16$PERCLOWINC0TO5[CE16$DAUID==35250986] * CE16$POP2016[CE16$DAUID==35250986] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35250987] * CE16$POP2016[CE16$DAUID==35250987]) / finaldf$POP2016[finaldf$DAUID==35250842]), 0
)
#
# DA = 35250844
#
# Unfortunately, one of the 2016 DAs that makes this up has an NA for income, so we'll
# skip this one and strip it when we strip 2016 NAs at the end
#
# DA = 35250858
#
finaldf$POP2016[finaldf$DAUID==35250858] <- (CE16$POP2016[CE16$DAUID==35251000] + CE16$POP2016[CE16$DAUID==35251001] + CE16$POP2016[CE16$DAUID==35251002])
#
finaldf$POP0TO142016[finaldf$DAUID==35250858] <- (CE16$POP0TO142016[CE16$DAUID==35251000] + CE16$POP0TO142016[CE16$DAUID==35251001] + CE16$POP0TO142016[CE16$DAUID==35251002])
#
finaldf$AVGAFTERTAXINCHH2016[finaldf$DAUID==35250858] <-     round(((CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251000] * CE16$POP2016[CE16$DAUID==35251000] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251001] * CE16$POP2016[CE16$DAUID==35251001] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251002] * CE16$POP2016[CE16$DAUID==35251002]) / finaldf$POP2016[finaldf$DAUID==35250858]), 0
)
#
finaldf$PERCLOWINC0TO52016[finaldf$DAUID==35250858] <-     round(((CE16$PERCLOWINC0TO5[CE16$DAUID==35251000] * CE16$POP2016[CE16$DAUID==35251000] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251001] * CE16$POP2016[CE16$DAUID==35251001] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251002] * CE16$POP2016[CE16$DAUID==35251002]) / finaldf$POP2016[finaldf$DAUID==35250858]), 0
)
#
# DA = 35250915
#
# Unfortunately, one of the 2016 DAs that makes this up has an NA for income too, so we'll
# skip this one and strip it when we strip 2016 NAs at the end
#
# DA = 35250916
# this next one's a monster, it got split into 6 DAs by 2016!
#
finaldf$POP2016[finaldf$DAUID==35250916] <- (CE16$POP2016[CE16$DAUID==35251033] + CE16$POP2016[CE16$DAUID==35251035] + CE16$POP2016[CE16$DAUID==35251036] + CE16$POP2016[CE16$DAUID==35251037] + CE16$POP2016[CE16$DAUID==35251038] + CE16$POP2016[CE16$DAUID==35251039])
#
finaldf$POP0TO142016[finaldf$DAUID==35250916] <- (CE16$POP0TO142016[CE16$DAUID==35251033] + CE16$POP0TO142016[CE16$DAUID==35251035] + CE16$POP0TO142016[CE16$DAUID==35251036] + CE16$POP0TO142016[CE16$DAUID==35251037] + CE16$POP2016[CE16$DAUID==35251038] + CE16$POP2016[CE16$DAUID==35251039])
#
finaldf$AVGAFTERTAXINCHH2016[finaldf$DAUID==35250916] <-     round(((CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251033] * CE16$POP2016[CE16$DAUID==35251033] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251035] * CE16$POP2016[CE16$DAUID==35251035] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251036] * CE16$POP2016[CE16$DAUID==35251036] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251037] * CE16$POP2016[CE16$DAUID==35251037] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251038] * CE16$POP2016[CE16$DAUID==35251038] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251039] * CE16$POP2016[CE16$DAUID==35251039]) / finaldf$POP2016[finaldf$DAUID==35250916]), 0
)
#
finaldf$PERCLOWINC0TO52016[finaldf$DAUID==35250916] <-     round(((CE16$PERCLOWINC0TO5[CE16$DAUID==35251033] * CE16$POP2016[CE16$DAUID==35251033] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251035] * CE16$POP2016[CE16$DAUID==35251035] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251036] * CE16$POP2016[CE16$DAUID==35251036] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251037] * CE16$POP2016[CE16$DAUID==35251037] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251038] * CE16$POP2016[CE16$DAUID==35251038] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251039] * CE16$POP2016[CE16$DAUID==35251039]) / finaldf$POP2016[finaldf$DAUID==35250916]), 0
)
#
# DA = 35250917
#
finaldf$POP2016[finaldf$DAUID==35250917] <- (CE16$POP2016[CE16$DAUID==35250996] + CE16$POP2016[CE16$DAUID==35250997])
#
finaldf$POP0TO142016[finaldf$DAUID==35250917] <- (CE16$POP0TO142016[CE16$DAUID==35250996] + CE16$POP0TO142016[CE16$DAUID==35250997])
#
finaldf$AVGAFTERTAXINCHH2016[finaldf$DAUID==35250917] <-     round(((CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35250996] * CE16$POP2016[CE16$DAUID==35250996] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35250997] * CE16$POP2016[CE16$DAUID==35250997]) / finaldf$POP2016[finaldf$DAUID==35250917]), 0
)
#
finaldf$PERCLOWINC0TO52016[finaldf$DAUID==35250917] <-     round(((CE16$PERCLOWINC0TO5[CE16$DAUID==35250996] * CE16$POP2016[CE16$DAUID==35250996] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35250997] * CE16$POP2016[CE16$DAUID==35250997]) / finaldf$POP2016[finaldf$DAUID==35250917]), 0
)
#
# DA = 35250926
#
finaldf$POP2016[finaldf$DAUID==35250926] <- (CE16$POP2016[CE16$DAUID==35250976] + CE16$POP2016[CE16$DAUID==35250980])
#
finaldf$POP0TO142016[finaldf$DAUID==35250926] <- (CE16$POP0TO142016[CE16$DAUID==35250976] + CE16$POP0TO142016[CE16$DAUID==35250980])
#
finaldf$AVGAFTERTAXINCHH2016[finaldf$DAUID==35250926] <-     round(((CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35250976] * CE16$POP2016[CE16$DAUID==35250976] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35250980] * CE16$POP2016[CE16$DAUID==35250980]) / finaldf$POP2016[finaldf$DAUID==35250926]), 0
)
#
finaldf$PERCLOWINC0TO52016[finaldf$DAUID==35250926] <-     round(((CE16$PERCLOWINC0TO5[CE16$DAUID==35250976] * CE16$POP2016[CE16$DAUID==35250976] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35250980] * CE16$POP2016[CE16$DAUID==35250980]) / finaldf$POP2016[finaldf$DAUID==35250926]), 0
)
#
# DA = 35250927
#
finaldf$POP2016[finaldf$DAUID==35250927] <- (CE16$POP2016[CE16$DAUID==35250978])
#
finaldf$POP0TO142016[finaldf$DAUID==35250927] <- (CE16$POP0TO142016[CE16$DAUID==35250978])
#
finaldf$AVGAFTERTAXINCHH2016[finaldf$DAUID==35250927] <-     (CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35250978])
#
finaldf$PERCLOWINC0TO52016[finaldf$DAUID==35250927] <- (CE16$PERCLOWINC0TO5[CE16$DAUID==35250978])
# now we strip out all 2016 NAs
#
finaldf <- subset(finaldf, !is.na(AVGAFTERTAXINCHH2016))
finaldf <- subset(finaldf, !is.na(PERCLOWINC0TO52016))
finaldf <- subset(finaldf, AVGAFTERTAXINCHH2016>0)
# calculated delta income, and the flag
finaldf$deltaincome <- finaldf$AVGAFTERTAXINCHH2016/finaldf$AVGAFTERTAXINCHH2006
finaldf$deltaincoveravg <- as.integer(finaldf$deltaincome > finaldf$deltaincome[finaldf$DAUID==3525])
# calculate delta pop 0 to 14
finaldf$deltapop0to14 <- finaldf$POP0TO142016 - finaldf$POP0TO142006
head(finaldf)
library(sf)
DAgeometry <- st_read("./ArcGIS", layer = "Join_Output")
DAgeometry <- mutate(DAgeometry, DAUID = as.integer(as.character(DAUID)))
DAs <- DAgeometry %>%
select(DAUID, Max_CLOSED, geometry)
DAsj <- inner_join(DAs, finaldf)
library(ggplot2)
DAsj$Isschoolclosed <- as.numeric(DAsj$Max_CLOSED==1 | DAsj$Max_CLOSED==2)
library(tmap)
tmap_mode("view")
pal1 <- c("green", "red")
tm_shape(DAsj) + tm_polygons("Isschoolclosed", palette = pal1)
tmap_mode("view")
tm_shape(DAsj) +
tm_fill(c("deltapop0to14", "deltaincome"),title=c("Delta 0 to 14 pop", "delta income"), n=c(6,10), style=c("quantile", "jenks"), palette="YlOrBr") +
tm_facets(sync = TRUE, ncol = 2)
tmap_mode("view")
tm_shape(DAsj) + tm_polygons(c("AVGAFTERTAXINCHH2006", "PERCLOWINC0TO52006"),n=c(6,6)) +
tm_facets(sync = TRUE, ncol = 2)
myprobit <- glm(Isschoolclosed ~ deltaincome + deltapop0to14 + PERCLOWINC0TO52006, family = binomial(link = "probit"), data = DAsj)
## model summary
summary(myprobit)
myprobit <- glm(Isschoolclosed ~ deltaincome + deltapop0to14 + POP0TO142006 + log(AVGAFTERTAXINCHH2006) + PERCLOWINC0TO52006, family = binomial(link = "probit"), data = DAsj)
summary(myprobit)
#poop, I forgot to subset out POP2006 NAs!
DAsj <- subset(DAsj, !is.na(POP2006))
DAsj$deltaperckids <- DAsj$deltapop0to14 / DAsj$POP2006
myprobit <- glm(Isschoolclosed ~ deltaincome + deltaperckids + deltapop0to14 + POP0TO142006 + log(AVGAFTERTAXINCHH2006) + PERCLOWINC0TO52006, family = binomial(link = "probit"), data = DAsj)
summary(myprobit)
a <- lm(deltaincome ~ log(AVGAFTERTAXINCHH2006), data=DAsj)
summary(a)
DAsj$gent <- as.numeric(DAsj$deltaincoveravg==1) * as.numeric(DAsj$deltapop0to14<=0)
myprobit <- glm(Isschoolclosed ~ deltaincome + deltaperckids + deltapop0to14 + POP0TO142006 + log(AVGAFTERTAXINCHH2006) + PERCLOWINC0TO52006 + gent, family = binomial(link = "probit"), data = DAsj)
## model summary
summary(myprobit)
DAcath <- st_read("./ArcGIS/CATHOLIC", layer = "Join_Cath")
DAcath <- mutate(DAcath, DAUID = as.integer(as.character(DAUID)))
DAcath <- DAcath %>%
rename(
Cath_CLOSED = Max_CLOSED
)
st_geometry(DAcath) <- NULL
DAcath <- DAcath %>% select(DAUID, Cath_CLOSED)
DAsj2 <- inner_join(DAsj, DAcath)
DAsj2$Isschoolclosed2 <- as.numeric(DAsj2$Cath_CLOSED==1 | DAsj2$Cath_CLOSED==2)
tmap_mode("view")
#qtm(ridings, fill = "Isschoolclosed")
pal1 <- c("green", "red")
tm_shape(DAsj2) + tm_polygons("Isschoolclosed2", palette = pal1)
myprobit2 <- glm(Isschoolclosed2 ~ deltaincome + deltapop0to14 + deltaperckids + POP0TO142006 + log(AVGAFTERTAXINCHH2006) + PERCLOWINC0TO52006 + gent, family = binomial(link = "probit"), data = DAsj2)
## model summary
summary(myprobit2)
DAsj2
DAsj2 <- DAsj2 %>%
rename(
POP06 = POP2006,
POPKIDS06 = POP0TO142006,
PCLOWINCO6 = PERCLOWINC0TO52006,
AVGINC06 = AVGAFTERTAXINCHH2006,
POP16 = POP2016,
POPKIDS16 = POP0TO142016,
PCLOWINC16 = PERCLOWINC0TO52016,
AVGINC16 = AVGAFTERTAXINCHH2016,
DELTAINC = deltaincome,
DINCOVERAV = deltaincoveravg,
DELTAKIDS = deltapop0to14,
SCLCLOSED = Isschoolclosed,
DELTAPKIDS = deltaperckids,
CATHCLOSED = Isschoolclosed2
)
st_write(DAsj2, "C:/Users/me/Documents/GitHub/DAsj2.shp", delete_layer=TRUE)
library(openxlsx)
library(tidyverse)
library(sf)
colIndex <-
c(13, 14, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 40, 41, 49, 61, 63, 68, 72, 80, 81, 90, 91, 92, 94, 96, 101, 116, 124, 125, 126, 129, 137, 141, 142, 155, 156, 160, 161, 162, 168, 169, 172, 173, 182, 189, 195, 197, 207, 208, 213, 234, 238, 239, 242, 243, 244, 255, 256, 257, 258, 259, 260, 261, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279)
df <- read.xlsx(xlsxFile = "E:/PAEZ/RAHBdata/RAHB_AllData_HamBurlOak.xlsx",
sheet = 1,
colNames = TRUE,
detectDates = TRUE,
cols = colIndex)
df_2016.sf <- df %>% filter(YEAR == 2016, !is.na(Latitude), !is.na(Longitude)) %>%
st_as_sf(coords = c("Longitude", "Latitude"),
crs = 4326)
df_2016.sf
rm(df)
(df_2016.sf <- st_transform(df_2016.sf, 26917))
df_2016.sf <- st_crop(df_2016.sf, xmin = 560921, ymin = 4767177, xmax = 621021, ymax = 4814330)
st_crs(df_2016.sf)
plot(df_2016.sf[,"Close.Price"])
hamilton_da.sf <- st_read("./FROMPROBIT", layer = "DAsj2")
hamilton_da.sf$area <- st_area(hamilton_da.sf)
hamilton_da.sf$popdens <- hamilton_da.sf$POP16 / hamilton_da.sf$area
st_crs(hamilton_da.sf)
hamilton_da.sf
ggplot(data = df_2016.sf) +
geom_sf(data = hamilton_da.sf, aes(fill = NULL)) +
geom_sf(aes(color = Close.Price))
st_crs(df_2016.sf)
st_crs(hamilton_da.sf)
st_crs(hamilton_da.sf) <- "+proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs"
houses.sf <- st_intersection(df_2016.sf, hamilton_da.sf)
ggplot(data = houses.sf) +
geom_sf(data = hamilton_da.sf, aes(fill = NULL)) +
geom_sf(aes(color = Close.Price, size = Close.Price), alpha = 0.2)
houses.sf <- houses.sf %>%
mutate(Transaction.Type = factor(Transaction.Type))
summary(houses.sf$Transaction.Type)
houses.sf <- houses.sf %>% filter(Transaction.Type == "SALE")
ggplot(data = houses.sf, aes(x = Close.Price)) + geom_histogram()
ggplot(data = houses.sf, aes(x = log(Close.Price))) + geom_histogram()
summary(houses.sf$Close.Price)
nrow(filter(houses.sf, Close.Price == 0))
summary(houses.sf$List.Price)
summary(houses.sf$Original.List.Price)
nrow(filter(houses.sf, Original.List.Price == 1))
nrow(filter(houses.sf, List.Price == 1))
nrow(filter(houses.sf, Original.List.Price <= 1000))
houses.sf %>% filter(Close.Price == 0) %>%
transmute(Close.Price, List.Price, Original.List.Price)
houses.sf %>% filter(Original.List.Price <= 1000) %>%
transmute(Close.Price, List.Price, Original.List.Price)
houses.sf %>% filter(Close.Price <= 25000) %>%
transmute(Close.Price, List.Price, Original.List.Price)
houses.sf <- houses.sf %>% filter(Close.Price >= 25000)
ggplot(data = houses.sf, aes(x = log(List.Price), y = log(Close.Price))) +
geom_point() +
geom_abline(intercept = 0, slope = 1, color = "blue")
houses.sf <- houses.sf %>%
mutate(Fronting.On = factor(Fronting.On))
summary(df_2016.sf$Fronting.On)
houses.sf <- houses.sf %>%
mutate(Property.Type = factor(Property.Type))
summary(houses.sf$Property.Type)
houses.sf <- houses.sf %>% filter(Property.Type == "RES")
houses.sf <- houses.sf %>%
mutate(Property.Sub.Type = factor(Property.Sub.Type))
summary(houses.sf$Property.Sub.Type)
houses.sf <- houses.sf %>% filter(Property.Sub.Type == "FRH")
ggplot(data = houses.sf, aes(x = log(Close.Price))) + geom_histogram()
mod0 <- lm(Close.Price ~ Baths.Full + Baths.Half + Beds.Total + Fronting.On + Kitchens.Total + Lot.Depth + Lot.Front + Number.Rooms + Parking.Spaces.Total, data = houses.sf)
summary(mod0)
ggplot(data = data.frame(Observed = mod0$fitted.values + mod0$residuals,
Predicted = mod0$fitted.values),
aes(x = Observed, y = Predicted)) +
geom_point()
houses.sf <- houses.sf %>%
mutate(log_Close.Price = log(Close.Price))
mod1 <- lm(log_Close.Price ~ Baths.Full + Baths.Half + Beds.Total + Fronting.On + Kitchens.Total + Lot.Depth + Lot.Front + Number.Rooms + Parking.Spaces.Total, data = houses.sf)
summary(mod1)
ggplot(data = data.frame(Observed = mod1$fitted.values + mod1$residuals,
Predicted = mod1$fitted.values),
aes(x = Observed, y = Predicted)) +
geom_point(alpha = 0.5) +
geom_abline(intercept = 0, slope = 1, color = "blue")
schools <- st_read("./HWDSB2016schoolpoints", layer = "HWDSB_2015_16_SCHOOLPOINTS")
schools <- schools %>% filter(!is.na(ELEM)) %>%
st_as_sf(coords = c("X", "Y"))
st_crs(schools)
st_crs(schools) <- "+proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs"
junk1 <- st_intersection(schools, hamilton_da.sf)
ggplot(data = junk1) +
geom_sf(data = hamilton_da.sf, aes(fill = NULL)) +
geom_sf()
houses.sf$nearest <- st_nearest_feature(houses.sf, schools)
houses.sf <- houses.sf %>%
mutate(schooldist = st_distance(houses.sf, schools[houses.sf$nearest,], by_element = TRUE))
houses.sf$nearest <- st_nearest_feature(houses.sf, schools)
houses.sf <- houses.sf %>%
mutate(schooldist = st_distance(houses.sf, schools[houses.sf$nearest,], by_element = TRUE))
mod2 <- lm(log_Close.Price ~ Baths.Full + Baths.Half + Beds.Total + Fronting.On + Kitchens.Total + Lot.Depth + Lot.Front + Number.Rooms + Parking.Spaces.Total + schooldist, data = houses.sf)
summary(mod2)
View(houses.sf)
View(houses.sf)
ggplot(data = houses.sf, aes(x = DELTAIN)) + geom_histogram()
ggplot(data = houses.sf, aes(x = log(DELTAIN))) + geom_histogram()
ggplot(data = houses.sf, aes(x = (DELTAIN))) + geom_histogram()
ggplot(data = houses.sf, aes(x = (AVGINC1))) + geom_histogram()
ggplot(data = houses.sf, aes(x = log(AVGINC1))) + geom_histogram()
ggplot(data = houses.sf, aes(x = (AVGINC1))) + geom_histogram()
ggplot(data = houses.sf, aes(x = (popdens))) + geom_histogram()
ggplot(data = houses.sf, aes(x = as.numeric(popdens))) + geom_histogram()
ggplot(data = houses.sf, aes(x = log(as.numeric(popdens)))) + geom_histogram()
ggplot(data = houses.sf, aes(x = log(AVGINC1))) + geom_histogram()
ggplot(data = houses.sf, aes(x = DELTAIN)) + geom_histogram()
nrow(houses.sf$DELTAIN > 4)
nrow(houses.sf$DELTAIN => 4)
nrow(houses.sf$DELTAIN >= 4)
nrow(houses.sf$DELTAIN >= 2)
nrow(houses.sf$DELTAIN >= 1)
nrow(houses.sf[houses.sf$DELTAIN >= 3])
nrow(filter(houses.sf, DELTAIN >= 4))
mod3 <- lm(log_Close.Price ~ Baths.Full + Baths.Half + Beds.Total + Fronting.On + Kitchens.Total + Lot.Depth + Lot.Front + Number.Rooms + Parking.Spaces.Total + schooldist + DELTAIN + log(AVINC1) + popdens, data = houses.sf)
mod3 <- lm(log_Close.Price ~ Baths.Full + Baths.Half + Beds.Total + Fronting.On + Kitchens.Total + Lot.Depth + Lot.Front + Number.Rooms + Parking.Spaces.Total + schooldist + DELTAIN + log(AVGINC1) + popdens, data = houses.sf)
summary(mod3)
e^7.263e+00
e
e = 2.71828
e^7.263e+00
